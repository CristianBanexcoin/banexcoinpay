#pragma checksum "C:\Users\Rolando\Desktop\BTCPAY\btcpayserver-master\btcpayserver-master\BTCPayServer\Views\Invoice\Checkout-Body.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "06ebec59d1005ffba4fb5fbbf19e0a00549484d4"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Invoice_Checkout_Body), @"mvc.1.0.view", @"/Views/Invoice/Checkout-Body.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/Invoice/Checkout-Body.cshtml", typeof(AspNetCore.Views_Invoice_Checkout_Body))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "C:\Users\Rolando\Desktop\BTCPAY\btcpayserver-master\btcpayserver-master\BTCPayServer\Views\_ViewImports.cshtml"
using Microsoft.AspNetCore.Identity;

#line default
#line hidden
#line 2 "C:\Users\Rolando\Desktop\BTCPAY\btcpayserver-master\btcpayserver-master\BTCPayServer\Views\_ViewImports.cshtml"
using BTCPayServer;

#line default
#line hidden
#line 3 "C:\Users\Rolando\Desktop\BTCPAY\btcpayserver-master\btcpayserver-master\BTCPayServer\Views\_ViewImports.cshtml"
using BTCPayServer.Views;

#line default
#line hidden
#line 4 "C:\Users\Rolando\Desktop\BTCPAY\btcpayserver-master\btcpayserver-master\BTCPayServer\Views\_ViewImports.cshtml"
using BTCPayServer.Models;

#line default
#line hidden
#line 5 "C:\Users\Rolando\Desktop\BTCPAY\btcpayserver-master\btcpayserver-master\BTCPayServer\Views\_ViewImports.cshtml"
using BTCPayServer.Models.AccountViewModels;

#line default
#line hidden
#line 6 "C:\Users\Rolando\Desktop\BTCPAY\btcpayserver-master\btcpayserver-master\BTCPayServer\Views\_ViewImports.cshtml"
using BTCPayServer.Models.InvoicingModels;

#line default
#line hidden
#line 7 "C:\Users\Rolando\Desktop\BTCPAY\btcpayserver-master\btcpayserver-master\BTCPayServer\Views\_ViewImports.cshtml"
using BTCPayServer.Models.ManageViewModels;

#line default
#line hidden
#line 8 "C:\Users\Rolando\Desktop\BTCPAY\btcpayserver-master\btcpayserver-master\BTCPayServer\Views\_ViewImports.cshtml"
using BTCPayServer.Models.StoreViewModels;

#line default
#line hidden
#line 1 "C:\Users\Rolando\Desktop\BTCPAY\btcpayserver-master\btcpayserver-master\BTCPayServer\Views\Invoice\_ViewImports.cshtml"
using BTCPayServer.Services.Invoices;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"06ebec59d1005ffba4fb5fbbf19e0a00549484d4", @"/Views/Invoice/Checkout-Body.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"d92ba4c5be7894d31e45019b21d323a2a5285d5b", @"/Views/_ViewImports.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"5213ff0c5a2def479a48eadb1e89f022778c0651", @"/Views/Invoice/_ViewImports.cshtml")]
    public class Views_Invoice_Checkout_Body : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<PaymentModel>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("header__icon__img"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/img/logo-white.png"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("height", new global::Microsoft.AspNetCore.Html.HtmlString("40"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("name", "Checkout-Spinner", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_4 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("manual__step-one refund-address-form contact-email-form"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_5 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("id", new global::Microsoft.AspNetCore.Html.HtmlString("emailAddressForm"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_6 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("name", new global::Microsoft.AspNetCore.Html.HtmlString("emailAddressForm"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_7 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("novalidate", new global::Microsoft.AspNetCore.Html.HtmlString(""), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_8 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_9 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("v-for", new global::Microsoft.AspNetCore.Html.HtmlString("currency of currencies"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_10 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute(":data-prefix", new global::Microsoft.AspNetCore.Html.HtmlString("\'<img src=\\\'\'+currency.image+\'\\\'/>\'"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_11 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute(":value", new global::Microsoft.AspNetCore.Html.HtmlString("currency.name"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_12 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/imlegacy/checkmark.svg"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_13 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/imlegacy/archived.svg"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.PartialTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_PartialTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            BeginContext(20, 86, true);
            WriteLiteral("\n<div class=\"top-header\">\n    <div class=\"header\">\n        <div class=\"header__icon\">\n");
            EndContext();
#line 6 "C:\Users\Rolando\Desktop\BTCPAY\btcpayserver-master\btcpayserver-master\BTCPayServer\Views\Invoice\Checkout-Body.cshtml"
             if (Model.CustomLogoLink != null)
            {

#line default
#line hidden
            BeginContext(167, 46, true);
            WriteLiteral("                <img class=\"header__icon__img\"");
            EndContext();
            BeginWriteAttribute("src", " src=\"", 213, "\"", 240, 1);
#line 8 "C:\Users\Rolando\Desktop\BTCPAY\btcpayserver-master\btcpayserver-master\BTCPayServer\Views\Invoice\Checkout-Body.cshtml"
WriteAttributeValue("", 219, Model.CustomLogoLink, 219, 21, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(241, 14, true);
            WriteLiteral(" height=\"40\">\n");
            EndContext();
#line 9 "C:\Users\Rolando\Desktop\BTCPAY\btcpayserver-master\btcpayserver-master\BTCPayServer\Views\Invoice\Checkout-Body.cshtml"
            }
            else
            {

#line default
#line hidden
            BeginContext(300, 16, true);
            WriteLiteral("                ");
            EndContext();
            BeginContext(316, 70, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "19a8166a12844d3e87ee95aa8ea2c1dc", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(386, 1, true);
            WriteLiteral("\n");
            EndContext();
#line 13 "C:\Users\Rolando\Desktop\BTCPAY\btcpayserver-master\btcpayserver-master\BTCPayServer\Views\Invoice\Checkout-Body.cshtml"
            }

#line default
#line hidden
            BeginContext(401, 260, true);
            WriteLiteral(@"        </div>
        <div class=""close-icon close-action"">
            &#10006;
        </div>
    </div>
    <div class=""timer-row"">
        <div class=""timer-row__progress-bar"" style=""width: 0%;""></div>
        <div class=""timer-row__spinner"">
            ");
            EndContext();
            BeginContext(661, 35, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("partial", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "c9fd46df73324927951ec9b0e2f8d6df", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_PartialTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.PartialTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_PartialTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_PartialTagHelper.Name = (string)__tagHelperAttribute_3.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_3);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(696, 476, true);
            WriteLiteral(@"
        </div>
        <div class=""timer-row__message"">
            <span v-if=""srvModel.status === 'expired' || srvModel.status === 'invalid'"">
                {{$t(""Factura vencida"")}}
            </span>
            <span v-else-if=""expiringSoon"">
                {{$t(""La factura expira pronto..."")}}
            </span>
            <span v-else>
                {{$t(""En espera de pago..."")}}
            </span>
        </div>
        <div class=""timer-row__time-left"">");
            EndContext();
            BeginContext(1173, 14, false);
#line 35 "C:\Users\Rolando\Desktop\BTCPAY\btcpayserver-master\btcpayserver-master\BTCPayServer\Views\Invoice\Checkout-Body.cshtml"
                                     Write(Model.TimeLeft);

#line default
#line hidden
            EndContext();
            BeginContext(1187, 297, true);
            WriteLiteral(@"</div>
    </div>
</div>
<div class=""order-details"">
    <div class=""currency-selection"">
        <div class=""single-item-order__left"">
            <div style=""font-weight: 600;"">
                {{$t(""Pagar con"")}}
            </div>
        </div>
        <div class=""single-item-order__right"">
");
            EndContext();
#line 46 "C:\Users\Rolando\Desktop\BTCPAY\btcpayserver-master\btcpayserver-master\BTCPayServer\Views\Invoice\Checkout-Body.cshtml"
             if (Model.AvailableCryptos.Count > 1)
            {

#line default
#line hidden
            BeginContext(1549, 608, true);
            WriteLiteral(@"                <div class=""paywithRowRight cursorPointer"" onclick=""openPaymentMethodDialog()"">
                    <span class=""payment__currencies "">
                        <img v-bind:src=""srvModel.cryptoImage"" />
                        <span>{{srvModel.paymentMethodName}} ({{srvModel.cryptoCodeSrv}})</span>
                        <span v-show=""srvModel.isLightning"">&#9889;</span>
                        <span class=""clickable_indicator fa fa-angle-right""></span>
                    </span>
                </div>
                <div id=""vexPopupDialog"">
                    <ul class=""vexmenu"">
");
            EndContext();
#line 58 "C:\Users\Rolando\Desktop\BTCPAY\btcpayserver-master\btcpayserver-master\BTCPayServer\Views\Invoice\Checkout-Body.cshtml"
                         foreach (var crypto in Model.AvailableCryptos)
                        {

#line default
#line hidden
            BeginContext(2255, 87, true);
            WriteLiteral("                            <li class=\"vexmenuitem\">\n                                <a");
            EndContext();
            BeginWriteAttribute("href", " href=\"", 2342, "\"", 2361, 1);
#line 61 "C:\Users\Rolando\Desktop\BTCPAY\btcpayserver-master\btcpayserver-master\BTCPayServer\Views\Invoice\Checkout-Body.cshtml"
WriteAttributeValue("", 2349, crypto.Link, 2349, 12, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginWriteAttribute("onclick", " onclick=\"", 2362, "\"", 2431, 4);
            WriteAttributeValue("", 2372, "return", 2372, 6, true);
            WriteAttributeValue(" ", 2378, "closePaymentMethodDialog(\'", 2379, 27, true);
#line 61 "C:\Users\Rolando\Desktop\BTCPAY\btcpayserver-master\btcpayserver-master\BTCPayServer\Views\Invoice\Checkout-Body.cshtml"
WriteAttributeValue("", 2405, crypto.PaymentMethodId, 2405, 23, false);

#line default
#line hidden
            WriteAttributeValue("", 2428, "\');", 2428, 3, true);
            EndWriteAttribute();
            BeginContext(2432, 42, true);
            WriteLiteral(">\n                                    <img");
            EndContext();
            BeginWriteAttribute("alt", " alt=\"", 2474, "\"", 2505, 1);
#line 62 "C:\Users\Rolando\Desktop\BTCPAY\btcpayserver-master\btcpayserver-master\BTCPayServer\Views\Invoice\Checkout-Body.cshtml"
WriteAttributeValue("", 2480, crypto.PaymentMethodName, 2480, 25, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginWriteAttribute("src", " src=\"", 2506, "\"", 2531, 1);
#line 62 "C:\Users\Rolando\Desktop\BTCPAY\btcpayserver-master\btcpayserver-master\BTCPayServer\Views\Invoice\Checkout-Body.cshtml"
WriteAttributeValue("", 2512, crypto.CryptoImage, 2512, 19, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(2532, 40, true);
            WriteLiteral(" />\n                                    ");
            EndContext();
            BeginContext(2573, 24, false);
#line 63 "C:\Users\Rolando\Desktop\BTCPAY\btcpayserver-master\btcpayserver-master\BTCPayServer\Views\Invoice\Checkout-Body.cshtml"
                               Write(crypto.PaymentMethodName);

#line default
#line hidden
            EndContext();
            BeginContext(2597, 37, true);
            WriteLiteral("\n                                    ");
            EndContext();
            BeginContext(2636, 47, false);
#line 64 "C:\Users\Rolando\Desktop\BTCPAY\btcpayserver-master\btcpayserver-master\BTCPayServer\Views\Invoice\Checkout-Body.cshtml"
                                Write(crypto.IsLightning ? Html.Raw("&#9889;") : null);

#line default
#line hidden
            EndContext();
            BeginContext(2684, 43, true);
            WriteLiteral("\n                                    <span>");
            EndContext();
            BeginContext(2728, 17, false);
#line 65 "C:\Users\Rolando\Desktop\BTCPAY\btcpayserver-master\btcpayserver-master\BTCPayServer\Views\Invoice\Checkout-Body.cshtml"
                                     Write(crypto.CryptoCode);

#line default
#line hidden
            EndContext();
            BeginContext(2745, 79, true);
            WriteLiteral("</span>\n                                </a>\n                            </li>\n");
            EndContext();
#line 68 "C:\Users\Rolando\Desktop\BTCPAY\btcpayserver-master\btcpayserver-master\BTCPayServer\Views\Invoice\Checkout-Body.cshtml"
                        }

#line default
#line hidden
            BeginContext(2850, 49, true);
            WriteLiteral("                    </ul>\n                </div>\n");
            EndContext();
#line 71 "C:\Users\Rolando\Desktop\BTCPAY\btcpayserver-master\btcpayserver-master\BTCPayServer\Views\Invoice\Checkout-Body.cshtml"
            }
            else
            {

#line default
#line hidden
            BeginContext(2944, 308, true);
            WriteLiteral(@"                <div class=""payment__currencies_noborder"">
                    <img v-bind:src=""srvModel.cryptoImage"" />
                    <span>{{srvModel.paymentMethodName}} ({{srvModel.cryptoCodeSrv}})</span>
                    <span v-show=""srvModel.isLightning"">&#9889;</span>
                </div>
");
            EndContext();
#line 79 "C:\Users\Rolando\Desktop\BTCPAY\btcpayserver-master\btcpayserver-master\BTCPayServer\Views\Invoice\Checkout-Body.cshtml"
            }

#line default
#line hidden
            BeginContext(3266, 59, true);
            WriteLiteral("            <div class=\"payment__spinner\">\n                ");
            EndContext();
            BeginContext(3325, 35, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("partial", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "052bcd3f5d1a45c59e35d348661f2cbd", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_PartialTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.PartialTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_PartialTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_PartialTagHelper.Name = (string)__tagHelperAttribute_3.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_3);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(3360, 3282, true);
            WriteLiteral(@"
            </div>
        </div>
    </div>

    <div class=""single-item-order buyerTotalLine"">
        <div class=""single-item-order__left"">
            <div class=""single-item-order__left__name"">
                {{ srvModel.storeName }}
            </div>
            <div class=""single-item-order__left__description"">
                {{ srvModel.itemDesc }}
            </div>
        </div>
        <div class=""single-item-order__right"">
            <div class=""single-item-order__right__btc-price"" v-if=""srvModel.status === 'paid'"">
                <span>{{ srvModel.btcPaid }} {{ srvModel.cryptoCode }}</span>
            </div>
            <div class=""single-item-order__right__btc-price"" v-else>
                <span>{{ srvModel.btcDue }} {{ srvModel.cryptoCode }}</span>
            </div>

            <div class=""single-item-order__right__ex-rate"" v-if=""srvModel.orderAmountFiat"">
                1 {{ srvModel.cryptoCodeSrv }} = {{ srvModel.rate }}
            </div>
        </div>

        <span class=""fa f");
            WriteLiteral(@"a-angle-double-down""></span>
        <span class=""fa fa-angle-double-up""></span>
    </div>
    <line-items>
        <div class=""line-items"">
            <div class=""line-items__item"">
                <div class=""line-items__item__label"">{{$t(""Total de la orden"")}}</div>
                <div class=""line-items__item__value"">{{srvModel.orderAmount}} {{ srvModel.cryptoCode }}</div>
            </div>
            <div class=""line-items__item line-items_fiatvalue"" v-if=""srvModel.orderAmountFiat"">
                <div class=""line-items__item__label"">&nbsp;</div>
                <div class=""line-items__item__value single-item-order__right__ex-rate"">
                    {{srvModel.orderAmountFiat}}
                </div>
            </div>
            <div class=""line-items__item"" v-show=""srvModel.networkFee > 0"">
                <div class=""line-items__item__label"">
                    <span>{{$t(""Costo de red"")}}</span>
                </div>
                <div class=""line-items__item__value"">
                   ");
            WriteLiteral(@" <span v-if=""srvModel.IsMultiCurrency"">
                        {{ srvModel.networkFee }} {{ srvModel.cryptoCode }}
                    </span>
                    <span v-else>
                        {{$t(""txContar"", {count: srvModel.txCount})}} x {{ srvModel.networkFee }} {{ srvModel.cryptoCode }}
                    </span>
                </div>
            </div>
            <div class=""line-items__item"">
                <div class=""line-items__item__label"">
                    <span>{{$t(""Ya pagado"")}}</span>
                </div>
                <div class=""line-items__item__value"">-{{srvModel.btcPaid }} {{ srvModel.cryptoCode }}</div>
            </div>
            <div class=""line-items__item line-items__item--total"">
                <div class=""line-items__item__label"">{{$t(""Debido"")}}</div>
                <div class=""line-items__item__value"">{{srvModel.btcDue}} {{ srvModel.cryptoCode }}</div>
            </div>
        </div>
    </line-items>
    <div class=""payment-tabs"">
        <div class=""p");
            WriteLiteral("ayment-tabs__tab active\" id=\"scan-tab\">\n            <span>{{$t(\"Escanear\")}}</span>\n        </div>\n        <div class=\"payment-tabs__tab\" id=\"copy-tab\">\n            <span>{{$t(\"Copiar\")}}</span>\n        </div>\n");
            EndContext();
#line 155 "C:\Users\Rolando\Desktop\BTCPAY\btcpayserver-master\btcpayserver-master\BTCPayServer\Views\Invoice\Checkout-Body.cshtml"
         if (Model.ChangellyEnabled || Model.CoinSwitchEnabled)
        {

#line default
#line hidden
            BeginContext(6716, 211, true);
            WriteLiteral("            <div class=\"payment-tabs__tab\" id=\"altcoins-tab\">\n                <span>{{$t(\"Conversión\")}}</span>\n            </div>\n            <div id=\"tabsSlider\" class=\"payment-tabs__slider three-tabs\"></div>\n");
            EndContext();
#line 161 "C:\Users\Rolando\Desktop\BTCPAY\btcpayserver-master\btcpayserver-master\BTCPayServer\Views\Invoice\Checkout-Body.cshtml"
        }
        else
        {

#line default
#line hidden
            BeginContext(6960, 69, true);
            WriteLiteral("            <div id=\"tabsSlider\" class=\"payment-tabs__slider\"></div>\n");
            EndContext();
#line 165 "C:\Users\Rolando\Desktop\BTCPAY\btcpayserver-master\btcpayserver-master\BTCPayServer\Views\Invoice\Checkout-Body.cshtml"
        }

#line default
#line hidden
            BeginContext(7039, 148, true);
            WriteLiteral("    </div>\n</div>\n\n<div class=\"payment-box\">\n    <div class=\"bp-view payment manual-flow enter-contact-email active\" id=\"emailAddressView\">\n        ");
            EndContext();
            BeginContext(7187, 1287, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "e6493a4672cf4c5197a5863a521b7790", async() => {
                BeginContext(7317, 989, true);
                WriteLiteral(@"
            <div class=""manual__step-one__header"">
                <span>{{$t(""Correo electrónico de contacto y reembolso"")}}</span>
            </div>
            <div class=""manual__step-one__instructions"">
                <span class=""initial-label"">
                    <span>{{$t(""Contact_Body"")}}</span>
                </span>
                <span class=""submission-error-label"">{{$t(""Por favor, introduce una dirección de correo electrónico válida"")}}</span>
            </div>
            <div class=""input-wrapper"">
                <input class=""bp-input email-input ng-pristine ng-invalid ng-touched"" id=""emailAddressFormInput"" v-bind:placeholder=""$t('Tu correo electrónico')"" type=""email"">
                <bp-loading-button>
                    <button type=""submit"" class=""action-button"" style=""margin-top: 15px;"">
                        <span class=""button-text"">{{$t(""Continuar"")}}</span>
                        <div class=""loader-wrapper"">
                            ");
                EndContext();
                BeginContext(8306, 35, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("partial", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "0754caedc5a1433badeb3545f9590787", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_PartialTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.PartialTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_PartialTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_PartialTagHelper.Name = (string)__tagHelperAttribute_3.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_3);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(8341, 126, true);
                WriteLiteral("\n                        </div>\n                    </button>\n                </bp-loading-button>\n            </div>\n        ");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_4);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_5);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_6);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_7);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(8474, 1200, true);
            WriteLiteral(@"
    </div>
    <div class=""bp-view payment scan"" id=""scan"">
        <div class=""wrapBtnGroup"" v-bind:class=""{ invisible: lndModel === null || !scanDisplayQr }"">
            <div class=""btnGroupLnd"">
                <button onclick=""lndToggleBolt11()"" v-bind:class=""{ active: lndModel != null && lndModel.toggle === 0 }""
                        v-bind:title=""$t('BOLT 11 Invoice')"">
                    {{$t(""BOLT 11 Invoice"")}}
                </button>
                <button onclick=""lndToggleNode()"" v-bind:class=""{ active: lndModel != null && lndModel.toggle === 1 }""
                        v-bind:title=""$t('Node Info')"">
                    {{$t(""Información del nodo"")}}
                </button>
            </div>
        </div>
        <div class=""payment__scan"">
            <img v-bind:src=""srvModel.cryptoImage"" class=""qr_currency_icon""
                 v-if=""scanDisplayQr"" />
            <qrcode v-bind:value=""scanDisplayQr"" :options=""{ width: 256, margin: 0, color: {dark:'#000', light:'#f5f5f7'} }"" tag=""");
            WriteLiteral("svg\"\n                    v-if=\"scanDisplayQr\">\n            </qrcode>\n\n\n            <div class=\"payment__spinner qr_currency_icon\" style=\"padding-right: 20px;\">\n                ");
            EndContext();
            BeginContext(9674, 35, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("partial", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "e7a11b5f0d314d2b92016bed38dd63e2", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_PartialTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.PartialTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_PartialTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_PartialTagHelper.Name = (string)__tagHelperAttribute_3.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_3);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(9709, 2306, true);
            WriteLiteral(@"
            </div>
        </div>
        <div class=""payment__details__instruction__open-wallet"" v-if=""scanDisplayQr"">
            <a class=""payment__details__instruction__open-wallet__btn action-button"" v-bind:href=""srvModel.invoiceBitcoinUrl"">
                <span>{{$t(""Abierto en la billetera"")}}</span>
            </a>
        </div>
    </div>

    <div class=""bp-view payment manual-flow"" id=""copy"">
        <div class=""manual__step-two__instructions"">
            <span i18n="""">{{$t(""CompletePay_Body"", srvModel)}}</span>
        </div>
        <div class=""copyLabelPopup"">
            <span>{{$t(""Copiado"")}}</span>
        </div>
        <nav v-if=""srvModel.isLightning"" class=""copyBox"">
            <div class=""copySectionBox bottomBorder"">
                <label>{{$t(""BOLT 11 Invoice"")}}</label>
                <div class=""inputWithIcon _copyInput"">
                    <input type=""text"" class=""checkoutTextbox"" v-bind:value=""srvModel.btcAddress"" readonly=""readonly"" />
                    <img v-bind:src");
            WriteLiteral(@"=""srvModel.cryptoImage"" />
                </div>
            </div>
            <div class=""separatorGem""></div>
            <div class=""copySectionBox"">
                <label>{{$t(""Información del nodo"")}}</label>
                <div class=""inputWithIcon _copyInput"">
                    <input type=""text"" class=""checkoutTextbox"" v-bind:value=""srvModel.peerInfo"" readonly=""readonly"" />
                    <img v-bind:src=""srvModel.cryptoImage"" />
                </div>
            </div>
        </nav>
        <nav v-else class=""copyBox"">
            <div class=""copySectionBox bottomBorder"">
                <label>{{$t(""Cantidad"")}}</label>
                <div class=""copyAmountText copy-cursor _copySpan"">
                    <span>{{srvModel.btcDue}}</span> {{ srvModel.cryptoCode }}
                </div>
            </div>
            <div class=""separatorGem""></div>
            <div class=""copySectionBox"">
                <label>{{$t(""Dirección"")}}</label>
                <div class=""inputWithIcon _copyI");
            WriteLiteral(@"nput"">
                    <input type=""text"" class=""checkoutTextbox"" v-bind:value=""srvModel.btcAddress"" readonly=""readonly"" />
                    <img v-bind:src=""srvModel.cryptoImage"" />
                </div>
            </div>
        </nav>
    </div>
");
            EndContext();
#line 267 "C:\Users\Rolando\Desktop\BTCPAY\btcpayserver-master\btcpayserver-master\BTCPayServer\Views\Invoice\Checkout-Body.cshtml"
     if (Model.ChangellyEnabled || Model.CoinSwitchEnabled)
    {

#line default
#line hidden
            BeginContext(12081, 714, true);
            WriteLiteral(@"        <div id=""altcoins"" class=""bp-view payment manual-flow"">
            <nav v-if=""srvModel.isLightning"">
                <div class=""manual__step-two__instructions"">
                    <span>
                        {{$t(""ConversionTab_Lightning"")}}
                    </span>
                </div>
            </nav>
            <nav v-else>
                <div class=""manual__step-two__instructions"">
                    <span>
                        {{$t(""ConversionTab_BodyTop"", srvModel)}}
                        <br /><br />
                        {{$t(""ConversionTab_BodyDesc"", srvModel)}}
                    </span>
                </div>
                <center>        
                    
");
            EndContext();
#line 287 "C:\Users\Rolando\Desktop\BTCPAY\btcpayserver-master\btcpayserver-master\BTCPayServer\Views\Invoice\Checkout-Body.cshtml"
                     if (Model.CoinSwitchEnabled && Model.ChangellyEnabled)
                    {

#line default
#line hidden
            BeginContext(12893, 536, true);
            WriteLiteral(@"                        <template v-if=""!selectedThirdPartyProcessor"">
                            <button v-on:click=""selectedThirdPartyProcessor = 'coinswitch'"" class=""action-button"">
                                {{$t(""Paga con CoinSwitch"")}}
                            </button>
                            <button v-on:click=""selectedThirdPartyProcessor = 'changelly'"" class=""action-button"">
                                {{$t(""Pagar con changelly"")}}
                            </button>
                        </template>
");
            EndContext();
#line 297 "C:\Users\Rolando\Desktop\BTCPAY\btcpayserver-master\btcpayserver-master\BTCPayServer\Views\Invoice\Checkout-Body.cshtml"
                    }

#line default
#line hidden
            BeginContext(13451, 21, true);
            WriteLiteral("                    \n");
            EndContext();
#line 299 "C:\Users\Rolando\Desktop\BTCPAY\btcpayserver-master\btcpayserver-master\BTCPayServer\Views\Invoice\Checkout-Body.cshtml"
                     if (Model.CoinSwitchEnabled)
                    {

#line default
#line hidden
            BeginContext(13544, 939, true);
            WriteLiteral(@"                        <coinswitch inline-template
                                    v-if=""!srvModel.changellyEnabled || selectedThirdPartyProcessor === 'coinswitch'""
                                    :mode=""srvModel.coinSwitchMode""
                                    :merchant-id=""srvModel.coinSwitchMerchantId""
                                    :to-currency=""srvModel.paymentMethodId""
                                    :to-currency-due=""coinswitchAmountDue""
                                    :autoload=""selectedThirdPartyProcessor === 'coinswitch'""
                                    :to-currency-address=""srvModel.btcAddress"">
                            <div>
                                <a v-on:click=""openDialog($event)"" :href=""url"" class=""action-button"" v-show=""url && !opened"">
                                    {{$t(""Paga con CoinSwitch"")}}
                                </a>
                                
");
            EndContext();
#line 314 "C:\Users\Rolando\Desktop\BTCPAY\btcpayserver-master\btcpayserver-master\BTCPayServer\Views\Invoice\Checkout-Body.cshtml"
                             if (Model.ChangellyEnabled)
                            {

#line default
#line hidden
            BeginContext(14570, 251, true);
            WriteLiteral("                                <button v-show=\"!opened\" v-on:click=\"$parent.selectedThirdPartyProcessor = \'changelly\'\" class=\"btn-link mt-2\">\n                                    {{$t(\"Pagar con changelly\")}}\n                                </button>\n");
            EndContext();
#line 319 "C:\Users\Rolando\Desktop\BTCPAY\btcpayserver-master\btcpayserver-master\BTCPayServer\Views\Invoice\Checkout-Body.cshtml"
                            }

#line default
#line hidden
            BeginContext(14851, 520, true);
            WriteLiteral(@"                            
                                <iframe  
                                    v-if=""showInlineIFrame""
                                    v-on:load=""onLoadIframe""
                                style=""height: 100%; position: fixed; top: 0; width: 100%; left: 0;""
                                sandbox=""allow-scripts allow-forms allow-popups allow-same-origin""
                                :src=""url""></iframe>

                            </div>

                        </coinswitch>
");
            EndContext();
#line 331 "C:\Users\Rolando\Desktop\BTCPAY\btcpayserver-master\btcpayserver-master\BTCPayServer\Views\Invoice\Checkout-Body.cshtml"
                    }

#line default
#line hidden
            BeginContext(15393, 21, true);
            WriteLiteral("                    \n");
            EndContext();
#line 333 "C:\Users\Rolando\Desktop\BTCPAY\btcpayserver-master\btcpayserver-master\BTCPayServer\Views\Invoice\Checkout-Body.cshtml"
                     if(Model.ChangellyEnabled){
                    

#line default
#line hidden
            BeginContext(15484, 1095, true);
            WriteLiteral(@"                        <changelly inline-template
                                   v-if=""!srvModel.coinSwitchEnabled || selectedThirdPartyProcessor === 'changelly'""
                                   :merchant-id=""srvModel.changellyMerchantId""
                                   :store-id=""srvModel.storeId""
                                   :to-currency=""srvModel.paymentMethodId""
                                   :to-currency-due=""srvModel.changellyAmountDue""
                                   :to-currency-address=""srvModel.btcAddress"">
                            <div class=""changelly-component"">
                                <div class=""changelly-component-dropdown-holder"" v-show=""prettyDropdownInstance"">
                                    <select 
                                        v-model=""selectedFromCurrency""
                                        :disabled=""isLoading""
                                        v-on:change=""onCurrencyChange($event)""
                                        ref=");
            WriteLiteral("\"changellyCurrenciesDropdown\">\n                                        ");
            EndContext();
            BeginContext(16579, 76, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "c63ccd81ac72407fb45656dea73b3503", async() => {
                BeginContext(16596, 50, true);
                WriteLiteral("{{$t(\"ConversionTab_CurrencyList_Select_Option\")}}");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_8.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_8);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(16655, 41, true);
            WriteLiteral("\n                                        ");
            EndContext();
            BeginContext(16696, 326, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "86fa692940a44bbd97e1d3892ff69823", async() => {
                BeginContext(16906, 107, true);
                WriteLiteral("\n                                            {{currency.fullName}}\n                                        ");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_9);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_10);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_11);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(17022, 306, true);
            WriteLiteral(@"
                                    </select>
                                </div>
                                <a  v-on:click=""openDialog($event)"" :href=""url"" class=""action-button""  v-show=""url"">
                                    {{$t(""Pagar con changelly"")}}
                                </a>
");
            EndContext();
#line 360 "C:\Users\Rolando\Desktop\BTCPAY\btcpayserver-master\btcpayserver-master\BTCPayServer\Views\Invoice\Checkout-Body.cshtml"
                                 if (Model.CoinSwitchEnabled)
                                {

#line default
#line hidden
            BeginContext(17424, 247, true);
            WriteLiteral("                                    <button v-on:click=\"$parent.selectedThirdPartyProcessor = \'coinswitch\'\" class=\"btn-link mt-2\">\n                                        {{$t(\"Paga con CoinSwitch\")}}\n                                    </button>\n");
            EndContext();
#line 365 "C:\Users\Rolando\Desktop\BTCPAY\btcpayserver-master\btcpayserver-master\BTCPayServer\Views\Invoice\Checkout-Body.cshtml"
                                }

#line default
#line hidden
            BeginContext(17705, 609, true);
            WriteLiteral(@"                                <button class=""retry-button"" v-if=""calculateError"" v-on:click=""retry('calculateAmount')"">
                                    {{$t(""ConversionTab_CalculateAmount_Error"")}}
                                </button>
                                <button class=""retry-button"" v-if=""currenciesError"" v-on:click=""retry('loadCurrencies')"">
                                    {{$t(""ConversionTab_LoadCurrencies_Error"")}}
                                </button>
                                <div v-show=""isLoading"" class=""general__spinner"">
                                    ");
            EndContext();
            BeginContext(18314, 34, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("partial", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "71939728e6d1497f8d72d3399717c384", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_PartialTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.PartialTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_PartialTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_PartialTagHelper.Name = (string)__tagHelperAttribute_3.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_3);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(18348, 112, true);
            WriteLiteral("\n                                </div>\n                            </div>\n                        </changelly>\n");
            EndContext();
#line 377 "C:\Users\Rolando\Desktop\BTCPAY\btcpayserver-master\btcpayserver-master\BTCPayServer\Views\Invoice\Checkout-Body.cshtml"
                    }

#line default
#line hidden
            BeginContext(18482, 60, true);
            WriteLiteral("                </center>\n            </nav>\n        </div>\n");
            EndContext();
#line 381 "C:\Users\Rolando\Desktop\BTCPAY\btcpayserver-master\btcpayserver-master\BTCPayServer\Views\Invoice\Checkout-Body.cshtml"
    }

#line default
#line hidden
            BeginContext(18548, 362, true);
            WriteLiteral(@"
    <div class=""bp-view"" id=""paid"">
        <div class=""status-block"">
            <div class=""success-block"">
                <div class=""status-icon"">
                    <div class=""status-icon__wrapper"">
                        <div class=""inner-wrapper"">
                            <div class=""status-icon__wrapper__icon"">
                                ");
            EndContext();
            BeginContext(18910, 36, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "2f30b6af52ea4690a0c22956eb668cf2", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_12);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(18946, 929, true);
            WriteLiteral(@"
                            </div>
                            <div class=""status-icon__wrapper__outline""></div>
                        </div>
                    </div>
                </div>
                <div class=""success-message"">{{$t(""This invoice has been paid"")}}</div>
                <a class=""action-button"" :href=""srvModel.merchantRefLink"" v-show=""!isModal"">
                    <span v-html=""$t('Regresar a StoreName', srvModel)""></span>
                </a>
                <button class=""action-button close-action"" v-show=""isModal"">
                    <span v-html=""$t('Close')"">{{$t(""Regresar a StoreName"", srvModel)}}</span>
                </button>
            </div>
        </div>
        <div class=""button-wrapper refund-address-form-container"" id=""refund-overpayment-button"">
        </div>
    </div>

    <div class=""bp-view expired"" id=""archived"">
        <div class=""expired-icon"">
            ");
            EndContext();
            BeginContext(19875, 35, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "bb1beabeff7c4855a5c0f88ee5652c7b", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_13);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(19910, 667, true);
            WriteLiteral(@"
        </div>
        <div class=""archived__message"">
            <div class=""archived__message__header"">
                <span>{{$t(""Esta factura ha sido archivada."")}}</span>
            </div>
            <div>
                <span>{{$t(""Archived_Body"")}}</span>
            </div>
        </div>
    </div>

    <div class=""bp-view expired"" id=""expired"">
        <div>
            <div class=""expired__body"" style=""margin-bottom: 20px;"">
                <div class=""expired__header"">{{$t(""¿Que pasó?"")}}</div>
                <div class=""expired__text"" i18n="""">
                    {{$t(""InvoiceExpired_Body_1"", {storeName: srvModel.storeName, maxTimeMinutes: ");
            EndContext();
            BeginContext(20578, 20, false);
#line 428 "C:\Users\Rolando\Desktop\BTCPAY\btcpayserver-master\btcpayserver-master\BTCPayServer\Views\Invoice\Checkout-Body.cshtml"
                                                                                             Write(Model.MaxTimeMinutes);

#line default
#line hidden
            EndContext();
            BeginContext(20598, 1027, true);
            WriteLiteral(@"})}}
                </div>
                <div class=""expired__text"">
                    {{$t(""InvoiceExpired_Body_2"")}}
                </div>
                <div class=""expired__text"">
                    {{$t(""InvoiceExpired_Body_3"")}}
                </div>
                <div class=""expired__text expired__text__smaller"">
                    <span class=""expired__text__bullet"">{{$t(""Factura ID"")}}</span>:
                    {{srvModel.invoiceId}}
                    <br />
                    <span class=""expired__text__bullet"">{{$t(""Order ID"")}}</span>:
                    {{srvModel.orderId}}
                </div>
            </div>
            <a class=""action-button"" :href=""srvModel.merchantRefLink"" v-show=""!isModal"">
                <span>{{$t(""Return to StoreName"", srvModel)}}</span>
            </a>
            <button class=""action-button close-action"" v-show=""isModal"">
                <span>{{$t(""Regresar a StoreName"", srvModel)}}</span>
            </button>
        </div>
    </div>
</di");
            WriteLiteral("v>\n");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<PaymentModel> Html { get; private set; }
    }
}
#pragma warning restore 1591
